/* resources/styles/global.qss */

/* 
 * Styles globaux de l'application.
 * Utilise les placeholders {{NOM_CONSTANTE}} qui seront remplacés
 * par les valeurs de config/theme.py via stylesheet_loader.py
 */

/* Style de base pour tous les widgets */
QWidget {
    color: {{COLOR_TEXT_PRIMARY}};
    background-color: {{COLOR_PRIMARY_DARKEST}};
    font-family: "Segoe UI";
    font-size: 9pt;
    border: none;
}

/* Fenêtre principale */
QWidget#WelcomeWindow {
    /* Doit rester sans style direct pour que la transparence fonctionne */
}

/* Conteneur intérieur pour les coins arrondis */
QWidget#MainContainerWidget {
    background-color: {{COLOR_PRIMARY_DARKEST}}; /* Appliquer le fond ici */
    border-radius: 10px;
    border: none; /* Explicitement sans bordure */
}

/* Barre latérale */
QFrame#Sidebar {
    background-color: {{COLOR_PRIMARY_DARK}};
}

/* Zone de contenu principale (Onglets) */
QTabWidget#MainTabWidget {
    /* Utiliser la couleur de fond medium comme les Frames */
    background-color: {{COLOR_PRIMARY_MEDIUM}};
    /* Pas besoin de bordure ici, géré par les styles d'onglets? */
    border: none; 
}

/* Style par défaut pour les widgets DANS la zone de contenu */
QTabWidget#MainTabWidget > QWidget {
    /* Assurer que les widgets enfants ont aussi un fond transparent */
    background-color: transparent;
}

/* -- Styles Sidebar (Boutons, etc.) -- */
QFrame#SidebarButtonContainer {
    background-color: transparent;
    border-radius: {{RADIUS_DEFAULT}};
}
QFrame#SidebarButtonContainer:hover {
    background-color: {{COLOR_ITEM_HOVER}};
}
QFrame#SidebarButtonContainer[checked="true"] {
    background-color: {{COLOR_ACCENT}};
}
QPushButton#SidebarButton {
    background-color: transparent;
    color: {{COLOR_TEXT_INACTIVE}};
    border: none; 
    padding: 0px;
    text-align: left;
}
QPushButton#SidebarButton:checked {
    color: {{COLOR_TEXT_ON_ACCENT}};
    font-weight: normal;
}
QFrame#SidebarButtonContainer:hover QPushButton#SidebarButton:!checked {
    color: {{COLOR_TEXT_PRIMARY}};
}

/* Badge (si utilisé) */
QLabel#SidebarBadge {
    background-color: {{COLOR_BADGE_BACKGROUND}};
    color: {{COLOR_BADGE_TEXT}};
    border-radius: {{RADIUS_BADGE}};
    font-size: 7pt;
    font-weight: bold;
    min-width: 16px; max-width: 16px;
    min-height: 16px; max-height: 16px;
    padding: 1px 0px 0px 0px;
}
QFrame#SidebarButtonContainer[checked="true"] QLabel#SidebarBadge {
    background-color: {{COLOR_BADGE_SELECTED_BACKGROUND}};
    color: {{COLOR_BADGE_SELECTED_TEXT}};
}

/* Bouton Settings */
QPushButton#SettingsButton {
    background-color: transparent;
    border: none;
    color: {{COLOR_TEXT_SECONDARY}};
    padding: 0px;
    border-radius: {{RADIUS_DEFAULT}};
}
QPushButton#SettingsButton:hover {
    background-color: {{COLOR_ITEM_HOVER}};
}

/* RETIRER le style TEMPORAIRE pour déboguer l'aperçu de signature */
/*
QLabel#SignaturePreviewLabel {
    background-color: red; 
    border: 1px solid yellow; 
}
*/

/* Style pour le widget d'aperçu de signature (TEST - COMMENTÉ) */
/*
QWidget#SignaturePreviewWidget {
    background-color: lime; 
    border: 2px solid magenta; 
    border-radius: {{RADIUS_DEFAULT}}; 
}
*/

/* --- Styles Généraux pour Widgets Communs --- */
/* (Peuvent être surchargés par les styles de page/composant) */

/* Rendre tous les QLabel transparents par défaut */
QLabel {
    background-color: transparent;
}

QPushButton {
    /* Style de base pour les boutons si nécessaire */
}

QLineEdit {
    background-color: {{COLOR_SEARCH_BACKGROUND}};
    border: 1px solid {{COLOR_PRIMARY_LIGHTEST}};
    border-radius: {{RADIUS_DEFAULT}};
    padding: {{PADDING_SMALL}} {{PADDING_MEDIUM}};
    color: {{COLOR_TEXT_PRIMARY}};
    min-height: 20px; /* Ou {{INPUT_HEIGHT_DEFAULT}} si défini */
}
QLineEdit:focus {
    border: 1px solid {{COLOR_ACCENT}};
}

QComboBox {
    background-color: {{COLOR_SEARCH_BACKGROUND}};
    border: 1px solid {{COLOR_PRIMARY_LIGHTEST}};
    border-radius: {{RADIUS_DEFAULT}};
    padding: {{PADDING_SMALL}} {{PADDING_MEDIUM}};
    color: {{COLOR_TEXT_PRIMARY}};
    min-height: 20px;
}
QComboBox:focus {
    border: 1px solid {{COLOR_ACCENT}};
}
QComboBox::drop-down {
    border: none; 
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;
}
QComboBox::down-arrow {
    /* image: url(...); */
    width: 10px; 
    height: 10px;
}
QComboBox QAbstractItemView {
    background-color: {{COLOR_ITEM_HOVER}};
    border: 1px solid {{COLOR_PRIMARY_LIGHT}};
    selection-background-color: {{COLOR_ACCENT}};
    color: {{COLOR_TEXT_PRIMARY}};
    padding: 2px;
}

/* ScrollBar (Style modifié pour fond correspondant au parent Frame) */
QScrollBar:vertical {
    border: none;
    background: {{COLOR_PRIMARY_MEDIUM}};
    width: 10px;
    margin: 0px;
}
QScrollBar::handle:vertical {
    background: #5c5f61;
    min-height: 30px;
    border-radius: 5px;
    border: none;
}
QScrollBar::handle:vertical:hover {
    background: #6c6f71;
}
QScrollBar::handle:vertical:pressed {
    background: #7c7f81;
}
QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
    height: 0px;
    background: {{COLOR_PRIMARY_MEDIUM}};
}
QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    background: {{COLOR_PRIMARY_MEDIUM}};
}

/* --- AJOUT: Styles pour ScrollBar Horizontale --- */
QScrollBar:horizontal {
    border: none;
    background: {{COLOR_PRIMARY_MEDIUM}};
    height: 10px; /* Changer width en height */
    margin: 0px;
}
QScrollBar::handle:horizontal {
    background: #5c5f61;
    min-width: 30px; /* Changer min-height en min-width */
    border-radius: 5px;
    border: none;
}
QScrollBar::handle:horizontal:hover {
    background: #6c6f71;
}
QScrollBar::handle:horizontal:pressed {
    background: #7c7f81;
}
QScrollBar::add-line:horizontal, QScrollBar::sub-line:horizontal {
    width: 0px; /* Changer height en width */
    background: {{COLOR_PRIMARY_MEDIUM}};
}
QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
    background: {{COLOR_PRIMARY_MEDIUM}};
}
/* ---------------------------------------------- */

/* Style pour le séparateur sous la barre de titre */
QFrame#TitleSeparatorLine {
    background-color: {{COLOR_PRIMARY_DARK}}; /* Ou COLOR_PRIMARY_LIGHT ? */
    border: none;
    max-height: 1px;
    min-height: 1px;
}

/* --- Styles Spécifiques aux Pages --- */

/* Rendre les QTextBrowser des pages About transparents */
QTextBrowser#ReadmeBrowser, 
QTextBrowser#NotesBrowser {
    background-color: transparent;
    border: none; /* Assurer qu'il n'y a pas de bordure non plus */
}

/* Optionnel: Styles spécifiques pour les liens dans ces browsers */
QTextBrowser#ReadmeBrowser a,
QTextBrowser#NotesBrowser a {
    color: {{COLOR_ACCENT}};
    text-decoration: none;
}
QTextBrowser#ReadmeBrowser a:hover,
QTextBrowser#NotesBrowser a:hover {
    text-decoration: underline;
}

/* --- Style spécifique pour les boutons de navigation type TopNavButton --- */
QPushButton#TopNavButton {
    background-color: transparent;
    border: none;
    color: {{COLOR_TEXT_PRIMARY}};
    padding: 4px 10px;
    border-radius: {{RADIUS_DEFAULT}};
    text-align: center;
}
QPushButton#TopNavButton:hover {
    background-color: {{COLOR_ACCENT}}; 
    color: {{COLOR_TEXT_ON_ACCENT}}; 
}
QPushButton#TopNavButton:pressed {
    background-color: {{COLOR_ACCENT_PRESSED}};
    color: {{COLOR_TEXT_ON_ACCENT}}; 
}

/* Ajouter d'autres styles spécifiques aux pages ici */ 

/* Retiré: Styles pour le badge de version dans QTextBrowser - Géré en ligne */

/* Styles globaux qui pourraient affecter le badge (optionnel) */
QTextBrowser {
    /* Peut-être définir une police par défaut ici si nécessaire */
}

/* Ciblage plus spécifique si possible (ex: via nom d'objet) */
QTextBrowser#ReadmeBrowser table.version-badge {
    display: inline-block; 
    border-collapse: collapse; 
    border-spacing: 0; 
    line-height: 1.2; 
    font-size: 8pt; 
    font-weight: bold; 
    vertical-align: middle; 
    border-radius: 4px; /* Ou {{RADIUS_DEFAULT}} */
    overflow: hidden;
    margin-bottom: 10px; 
}

QTextBrowser#ReadmeBrowser td.version-badge-label,
QTextBrowser#ReadmeBrowser td.version-badge-value {
    color: white; 
    padding: 3px 6px;
    border: none; 
}

QTextBrowser#ReadmeBrowser td.version-badge-label {
    background-color: {{COLOR_PRIMARY_DARK}}; 
}

QTextBrowser#ReadmeBrowser td.version-badge-value {
    background-color: {{COLOR_ACCENT}}; 
}

/* --- Style pour le widget SimpleToggle --- */
SimpleToggle {
    /* 1. S'assurer que le fond intrinsèque du widget est transparent */
    background-color: transparent; 
    
    /* 2. Tenter de forcer la couleur utilisée pour le rail (état décoché) 
       en redéfinissant le rôle QPalette.Dark spécifiquement pour ce widget. */
    palette-dark: transparent; 
    
    /* 3. S'assurer que les autres couleurs utilisées par paintEvent 
       (Highlight pour état coché, BrightText pour le handle) restent correctes.
       On peut les définir explicitement si nécessaire, ou espérer que
       les valeurs par défaut du thème global conviennent. */
    /* palette-highlight: {{COLOR_ACCENT}}; */ /* Ex: si besoin */
    /* palette-bright-text: {{COLOR_WHITE}}; */ /* Ex: si besoin */
} 

/* --- Style pour les boutons d'icône dans les formulaires (#FormButton) --- */
QPushButton#FormButton {
    background-color: transparent;
    border: none;
    padding: 2px; 
    border-radius: {{RADIUS_DEFAULT}}; 
}
QPushButton#FormButton:hover {
    background-color: {{COLOR_ITEM_HOVER}}; 
}
QPushButton#FormButton:pressed {
    background-color: {{COLOR_ACCENT_PRESSED}};
} 

/* --- Style pour la liste de projets (#ProjectList) --- */
QListWidget#ProjectList {
    background-color: transparent;
    border: none; 
}
QListWidget#ProjectList::item {
    border: none;
    padding: 5px 0px; /* Ajouter un peu d'espace vertical entre items */
}
QListWidget#ProjectList::item:hover {
    background-color: {{COLOR_ITEM_HOVER}};
    border-radius: {{RADIUS_DEFAULT}};
}
QListWidget#ProjectList::item:selected {
    background-color: {{COLOR_ITEM_HOVER}}; 
    border-radius: {{RADIUS_DEFAULT}};
}

/* Style pour le texte dans les items de la liste */
/* (Assure la lisibilité sur fond normal, hover, et sélectionné) */
QLabel#ProjectListName {
    color: {{COLOR_TEXT_PRIMARY}};
    font-weight: bold; 
    background-color: transparent;
}
QLabel#ProjectListPath {
    color: {{COLOR_TEXT_SECONDARY}};
    font-size: 8pt;
    background-color: transparent;
}
/* Pour item sélectionné/survolé */
QListWidget#ProjectList::item:selected QLabel#ProjectListName,
QListWidget#ProjectList::item:selected QLabel#ProjectListPath,
QListWidget#ProjectList::item:hover QLabel#ProjectListName,
QListWidget#ProjectList::item:hover QLabel#ProjectListPath {
    color: {{COLOR_TEXT_ON_ACCENT}}; /* Ou une autre couleur claire */
} 

/* Retiré: Styles pour #DocActionButton car non utilisé */

/* --- Style pour le bouton d'options dans les items de liste --- */
QPushButton#ItemOptionsButton {
    background: none; 
    border: none; 
    border-radius: 10px; /* Utiliser une valeur fixe en pixels */
    padding: 1px; 
}
QPushButton#ItemOptionsButton:hover {
    background-color: {{COLOR_ACCENT}}; 
    border-radius: 10px; /* Utiliser une valeur fixe en pixels */
}

/* ... (autres styles s'il y en a après) ... */ 

/* --- Styles pour CardWidget --- */
#CardWidget {
    background-color: {{COLOR_PRIMARY_LIGHT}};
    border-radius: {{RADIUS_BOX}};
    border: none;
}

/* Assurer que les widgets enfants directs (summary_widget, details_widget) sont transparents */
#CardWidget > QWidget {
    background-color: transparent;
    border: none;
}

/* Style pour le bouton d'expansion dans la carte */
#CardWidget QPushButton#CardExpandButton {
    background-color: transparent;
    border: none;
    /* Le padding et la taille sont définis en Python */
}

#CardWidget QPushButton#CardExpandButton:hover {
    background-color: {{COLOR_ITEM_HOVER}}; /* Utiliser la couleur standard de survol */
    border-radius: 4px; /* Petit radius pour le survol */
}

/* Style pour les QLabel à l'intérieur de CardWidget (pour assurer la transparence) */
#CardWidget QLabel {
    background-color: transparent;
    border: none;
}

/* Style spécifique pour le label d'info dans le résumé (déjà stylé inline, mais pour référence) */
/* #CardWidget > QWidget > QHBoxLayout > QLabel { font-weight: bold; } */

/* --- FIN Styles pour CardWidget --- */ 

/* --- Styles pour DocumentTabWidget --- */

/* Rendre le QTabWidget lui-même transparent */
QTabWidget#DocumentTabWidget {
    background-color: transparent;
    border: none; /* Assurer qu'il n'a pas de bordure propre */
}

QTabWidget#DocumentTabWidget::pane {
    /* Style du panneau contenant la page de l'onglet */
    border: none;
    top: -1px; /* <-- AJOUT: Essayer décalage négatif */
    /* Optionnel: peut définir un fond si le widget de page est transparent */
}

QTabWidget#DocumentTabWidget QTabBar::tab {
    background-color: {{COLOR_PRIMARY_DARK}}; /* Fond pour non sélectionné */
    color: {{COLOR_TEXT_SECONDARY}};
    /* border: 1px solid {{COLOR_PRIMARY_DARKEST}}; */ /* <-- SUPPRIMER Bordure */
    border: none; /* <-- Assurer absence de bordure */
    /* border-bottom: none; */ /* Devient inutile */
    border-top-left-radius: {{RADIUS_DEFAULT}};
    border-top-right-radius: {{RADIUS_DEFAULT}};
    padding: 6px 15px; /* Ajuster padding */
    min-width: 120px; /* Largeur minimale */
    margin-right: 2px; /* Espace entre onglets */
}

/* Forcer le premier onglet à être collé à gauche */
QTabWidget#DocumentTabWidget QTabBar::tab:first {
    margin-left: 0px;
    padding-left: 0px; /* Redéfinir si le padding général en ajoute */
}

QTabWidget#DocumentTabWidget QTabBar::tab:selected {
    background-color: {{COLOR_PRIMARY_DARKEST}}; /* Fond pour sélectionné (le plus foncé) */
    color: {{COLOR_TEXT_PRIMARY}};
    /* border-color: {{COLOR_PRIMARY_DARK}}; */ /* <-- SUPPRIMER car border:none sur tab */
    border-bottom: none; /* <-- AJOUT: Explicitement sans bordure en bas */
    padding-bottom: 0px; /* <-- AJOUT: Forcer padding bas à 0 */
    /* Optionnel: rendre la bordure du bas de la même couleur que le pane */
    /* border-bottom-color: {{COLOR_PRIMARY_MEDIUM}}; */
}

QTabWidget#DocumentTabWidget QTabBar::tab:!selected:hover {
    background-color: {{COLOR_PRIMARY_LIGHT}}; /* Effet de survol */
    color: {{COLOR_TEXT_PRIMARY}};
}

/* Bouton de fermeture sur l'onglet */
QTabWidget#DocumentTabWidget QTabBar::close-button {
    /* image: url(../icons/{{THEME}}/round_close.png); */ /* <-- Retrait */
    /* width: 16px; */ /* <-- Retrait */
    /* height: 16px; */ /* <-- Retrait */
    subcontrol-position: right;
    subcontrol-origin: padding;
    border-radius: 2px;
    background-color: transparent;
    padding: 2px; /* Revenir à l'état initial */
}

QTabWidget#DocumentTabWidget QTabBar::close-button:hover {
    background-color: {{COLOR_ITEM_HOVER}};
}

QTabWidget#DocumentTabWidget QTabBar::close-button:pressed {
    background-color: {{COLOR_PRIMARY_DARKEST}};
}

/* Style de la barre d'onglets elle-même si besoin */
QTabWidget#DocumentTabWidget QTabBar {
    background-color: {{COLOR_PRIMARY_DARK}}; /* <-- Définir explicitement le fond */
    border: none;
    qproperty-drawBase: 0; /* Ne pas dessiner la base sous les onglets */
    padding-left: 0px; /* <-- AJOUT */
    margin-left: 0px;  /* <-- AJOUT */
    padding: 0px; /* <-- Forcer tout padding à 0 */
    top: 0px; /* <-- AJOUT: Forcer position haute */
} 

/* --- Style pour DocumentsOpenPage --- */
QWidget#DocumentsOpenPage {
    background-color: {{COLOR_PRIMARY_DARK}};
} 

/* --- Style pour la zone derrière les onglets --- */
QWidget#DocumentContentArea {
    background-color: {{COLOR_PRIMARY_DARK}};
} 

/* --- Style pour le Séparateur Vertical entre Sidebar et Contenu --- */
QFrame#VerticalPageSeparator {
    border: none; /* Supprimer toute bordure */
    background-color: {{COLOR_PRIMARY_DARK}}; /* Fond identique à la sidebar/contenu */
    max-width: 1px; /* Garder une épaisseur minimale si nécessaire */
    min-width: 1px;
} 

/* --- Style pour le Cadre Facture --- */
QFrame#FactureFrame {
    background-color: {{COLOR_PRIMARY_LIGHT}};
    border-radius: {{RADIUS_BOX}};
    border: none;
} 